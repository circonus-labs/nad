#!/bin/bash
#
# nad        Startup script for Circonus Node Agent Daemon
#
# chkconfig: - 98 02
# description: Circonus Node Agent Daemon
# processname: nad
#
### BEGIN INIT INFO
# Provides:          nad
# Required-Start:    $local_fs
# Required-Stop:     $local_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Circonus Node Agent Daemon
# Description:       A very thin, simply managed host agent written in Node.js
#                    The node-agent daemon provides a simple mechanism to expose
#                    systems and application metrics to external onlookers.
#                    It inventories all executable programs in its config directory
#                    and executes them upon external request, returning results
#                    in JSON format.
### END INIT INFO

# Source function library.
. /etc/rc.d/init.d/functions

prog="Circonus Node Agent Daemon"
NAD="@@SBIN@@/nad"
NAD_PIDFILE="@@PID_FILE@@"

run_app() {
    $NAD --daemon --pid_file $NAD_PIDFILE
    RETVAL=$?
    if [[ $RETVAL -eq 0 ]]; then
        success
    else
        failure
    fi
    return $RETVAL
}

start() {
    echo -n $"Starting $prog: "
    RETVAL=3
    [[ -f $NAD_PIDFILE ]] && { __pids_var_run nad $NAD_PIDFILE; RETVAL=$?; }
    if [[ "$RETVAL" == "3" ]]; then
        # Not running, so start
        run_app
        RETVAL=$?
    elif [[ "$RETVAL" == "1" ]]; then
        # Stale pidfile
        rm $NAD_PIDFILE
        run_app
        RETVAL=$?
    else
        # Already running
        success
        RETVAL=0
    fi
    echo
    return $RETVAL
}

stop() {
    echo -n $"Stopping $prog: "
    killproc -p $NAD_PIDFILE
    RETVAL=$?
    echo
    return $RETVAL
}

# See how we were called.
case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    status)
        status -p $NAD_PIDFILE $NAD
        RETVAL=$?
        ;;
    reload|force-reload)
        echo "Reloading Circonus node agent daemon: not needed, as there is no config file."
        ;;
    restart)
        stop
        start
        ;;
    *)
        echo $"Usage: $0 {start|stop|reload|force-reload|status|restart}"
        RETVAL=2
esac

exit $RETVAL
